(function(b,B,s,c,g,f,p,_,N){"use strict";const{Permissions:M}=c.constants,{computePermissions:I}=s.findByProps("computePermissions","canEveryoneRole"),m=s.findByStoreName("GuildMemberStore"),E=[c.i18n.Messages.AI_TAG,c.i18n.Messages.BOT_TAG_SERVER,c.i18n.Messages.SYSTEM_DM_TAG_SYSTEM,c.i18n.Messages.GUILD_AUTOMOD_USER_BADGE_TEXT,c.i18n.Messages.REMIXING_TAG],w=[{text:"WEBHOOK",condition:function(e,t,o){return o.isNonUserBot()}},{text:"OWNER",backgroundColor:f.rawColors.ORANGE_345,condition:function(e,t,o){return e?.ownerId===o.id}},{text:c.i18n.Messages.BOT_TAG_BOT,condition:function(e,t,o){return o.bot},verified:function(e,t,o){return o.isVerifiedBot()}},{text:"ADMIN",backgroundColor:f.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:f.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:f.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function R(e,t,o){let l;if(e){const r=I({user:o,context:e,overwrites:t?.permissionOverwrites});l=Object.entries(M).map(function(n){let[i,a]=n;return r&a?i:""}).filter(Boolean)}for(const r of w)if(r.condition?.(e,t,o)||r.permissions?.some(function(n){return l?.includes(n)})){let n=B.storage.useRoleColor?m.getMember(e?.id,o.id)?.colorString:void 0,i=n||(r.backgroundColor??f.rawColors.BRAND_500),a=n||!r.textColor?c.chroma(i).get("lab.l")<70?f.rawColors.WHITE_500:f.rawColors.BLACK_500:r.textColor;return{...r,textColor:a,backgroundColor:i,verified:typeof r.verified=="function"?r.verified(e,t,o):r.verified??!1,condition:void 0,permissions:void 0}}}const k=s.findByName("getTagProperties",!1),L=s.findByStoreName("GuildStore"),O=s.findByStoreName("ChannelStore");function D(){return g.after("default",k,function(e,t){let[{message:o}]=e;if(!E.includes(t.tagText)){const l=O.getChannel(o.channel_id),r=L.getGuild(l?.guild_id),n=R(r,l,o.author);if(n)return{...t,tagText:n.text,tagTextColor:n.textColor?c.ReactNative.processColor(c.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?c.ReactNative.processColor(c.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}})}const T=s.findByProps("getBotLabel"),P=T.getBotLabel,$=s.findByStoreName("GuildStore"),U=function(e,t){let[{guildId:o,user:l}]=e;console.log(t);const r=p.findInReactTree(t.props.label,function(n){return n.type.Types});if(!r||!E.includes(P(r.props.type))){const n=$.getGuild(o),i=R(n,void 0,l);if(i)if(r)r.props={type:0,...i};else{const a=p.findInReactTree(t.props.label,function(u){return u.props?.lineClamp}).props.children;a.props.children[1]=React.createElement(React.Fragment,null," ",React.createElement(T.default,{type:0,text:i.text,textColor:i.textColor,backgroundColor:i.backgroundColor,verified:i.verified}))}}};function F(){const e=[];return s.findByTypeNameAll("UserRow").forEach(function(t){return e.push(g.after("type",t,U))}),function(){return e.forEach(function(t){return t()})}}const H=s.findByName("DisplayName",!1),K=s.findByName("HeaderName",!1),A=s.findByProps("getBotLabel"),V=A.getBotLabel,W=s.findByStoreName("GuildStore"),j=s.findByStoreName("ChannelStore");function X(){const e=[];return e.push(g.after("default",K,function(t,o){let[{channelId:l}]=t;o.props.channelId=l})),e.push(g.after("default",H,function(t,o){let[{guildId:l,channelId:r,user:n}]=t;const i=p.findInReactTree(o,function(a){return a.type.Types});if(!i||!E.includes(V(i.props.type))){const a=W.getGuild(l),u=j.getChannel(r),d=R(a,u,n);d&&(i?i.props={type:0,...d}:p.findInReactTree(o,function(y){return y.props.style.flexDirection==="row"}).props.children.push(React.createElement(A.default,{style:{marginLeft:0},type:0,text:d.text,textColor:d.textColor,backgroundColor:d.backgroundColor,verified:d.verified})))}})),function(){return e.forEach(function(t){return t()})}}const x=s.findByName("GuildMemberRow",!1),G=s.findByProps("getBotLabel"),h=G?.getBotLabel,S=s.findByStoreName("GuildStore");function Y(){if(!x||!h||!S)return console.error("sidebar.tsx: Failed to load modules.",{GuildMemberRow:x,getBotLabel:h,GuildStore:S}),function(){};const e=g.after("type",x,function(t,o){let[{guildId:l,channel:r,user:n}]=t;const i=p.findInReactTree(o,function(a){return a?.type?.Types});if(!i||!E.includes(h(i.props?.type))){const a=S.getGuild(l),u=R(a,r,n);if(u)if(i)i.props={type:0,...u};else{const d=p.findInReactTree(o,function(oe){return oe?.props?.style?.flexDirection==="row"});if(!d?.props){console.warn("sidebar.tsx: Failed to find row container");return}const y=d.props.children,v=React.createElement(G.default,{type:0,text:u.text,textColor:u.textColor,backgroundColor:u.backgroundColor,verified:u.verified});Array.isArray(y)?y.splice(2,0,v):y!=null?d.props.children=[y,v]:d.props.children=[v]}}});return function(){return e()}}const q=s.findByProps("getBotLabel");function z(){return g.after("default",q,function(e,t){let[{text:o,textColor:l,backgroundColor:r}]=e;const n=p.findInReactTree(t,function(i){return typeof i.props.children=="string"});o&&(n.props.children=o),l&&n.props.style.push({color:l}),r&&t.props.style.push({backgroundColor:r})})}const{ScrollView:J}=N.General,{FormSection:Q,FormSwitchRow:Z}=N.Forms;function ee(){return _.useProxy(B.storage),React.createElement(J,{style:{flex:1}},React.createElement(Q,{title:"Tag style"},React.createElement(Z,{label:"Use top role color for tag backgrounds",value:B.storage.useRoleColor,onValueChange:function(e){B.storage.useRoleColor=e}})))}let C=[];var te={onLoad:function(){B.storage.useRoleColor??=!1,C.push(D()),C.push(z()),C.push(X()),C.push(Y()),C.push(F())},onUnload:function(){return C.forEach(function(e){return e()})},settings:ee};return b.default=te,Object.defineProperty(b,"__esModule",{value:!0}),b})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
