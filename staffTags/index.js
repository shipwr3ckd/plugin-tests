(function(b,y,s,u,g,d,f,_,v){"use strict";const{Permissions:M}=u.constants,{computePermissions:A}=s.findByProps("computePermissions","canEveryoneRole"),I=s.findByStoreName("GuildMemberStore"),B=[u.i18n.Messages.AI_TAG,u.i18n.Messages.BOT_TAG_SERVER,u.i18n.Messages.SYSTEM_DM_TAG_SYSTEM,u.i18n.Messages.GUILD_AUTOMOD_USER_BADGE_TEXT,u.i18n.Messages.REMIXING_TAG],w=[{text:"WEBHOOK",condition:function(e,t,o){return o.isNonUserBot()}},{text:"OWNER",backgroundColor:d.rawColors.ORANGE_345,condition:function(e,t,o){return e?.ownerId===o.id}},{text:u.i18n.Messages.BOT_TAG_BOT,condition:function(e,t,o){return o.bot},verified:function(e,t,o){return o.isVerifiedBot()}},{text:"ADMIN",backgroundColor:d.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:d.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:d.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function E(e,t,o){let a;if(e){const n=A({user:o,context:e,overwrites:t?.permissionOverwrites});a=Object.entries(M).map(function(r){let[i,l]=r;return n&l?i:""}).filter(Boolean)}for(const n of w)if(n.condition?.(e,t,o)||n.permissions?.some(function(r){return a?.includes(r)})){let r=y.storage.useRoleColor?I.getMember(e?.id,o.id)?.colorString:void 0,i=r||(n.backgroundColor??d.rawColors.BRAND_500),l=r||!n.textColor?u.chroma(i).get("lab.l")<70?d.rawColors.WHITE_500:d.rawColors.BLACK_500:n.textColor;return{...n,textColor:l,backgroundColor:i,verified:typeof n.verified=="function"?n.verified(e,t,o):n.verified??!1,condition:void 0,permissions:void 0}}}const m=s.findByName("getTagProperties",!1),k=s.findByStoreName("GuildStore"),L=s.findByStoreName("ChannelStore");function O(){return g.after("default",m,function(e,t){let[{message:o}]=e;if(!B.includes(t.tagText)){const a=L.getChannel(o.channel_id),n=k.getGuild(a?.guild_id),r=E(n,a,o.author);if(r)return{...t,tagText:r.text,tagTextColor:r.textColor?u.ReactNative.processColor(u.chroma(r.textColor).hex()):void 0,tagBackgroundColor:r.backgroundColor?u.ReactNative.processColor(u.chroma(r.backgroundColor).hex()):void 0,tagVerified:r.verified,tagType:void 0}}})}const N=s.findByProps("getBotLabel"),D=N.getBotLabel,P=s.findByStoreName("GuildStore"),$=function(e,t){let[{guildId:o,user:a}]=e;console.log(t);const n=f.findInReactTree(t.props.label,function(r){return r.type.Types});if(!n||!B.includes(D(n.props.type))){const r=P.getGuild(o),i=E(r,void 0,a);if(i)if(n)n.props={type:0,...i};else{const l=f.findInReactTree(t.props.label,function(p){return p.props?.lineClamp}).props.children;l.props.children[1]=React.createElement(React.Fragment,null," ",React.createElement(N.default,{type:0,text:i.text,textColor:i.textColor,backgroundColor:i.backgroundColor,verified:i.verified}))}}};function U(){const e=[];return s.findByTypeNameAll("UserRow").forEach(function(t){return e.push(g.after("type",t,$))}),function(){return e.forEach(function(t){return t()})}}const H=s.findByName("DisplayName",!1),K=s.findByName("HeaderName",!1),T=s.findByProps("getBotLabel"),V=T.getBotLabel,F=s.findByStoreName("GuildStore"),W=s.findByStoreName("ChannelStore");function j(){const e=[];return e.push(g.after("default",K,function(t,o){let[{channelId:a}]=t;o.props.channelId=a})),e.push(g.after("default",H,function(t,o){let[{guildId:a,channelId:n,user:r}]=t;const i=f.findInReactTree(o,function(l){return l.type.Types});if(!i||!B.includes(V(i.props.type))){const l=F.getGuild(a),p=W.getChannel(n),c=E(l,p,r);c&&(i?i.props={type:0,...c}:f.findInReactTree(o,function(R){return R.props.style.flexDirection==="row"}).props.children.push(React.createElement(T.default,{style:{marginLeft:0},type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified})))}})),function(){return e.forEach(function(t){return t()})}}const S=s.findByName("GuildMemberRow",!1),G=s.findByProps("getBotLabel"),x=G?.getBotLabel,h=s.findByStoreName("GuildStore");function X(){if(!S||!x||!h)return console.error("Missing modules in sidebar.tsx:",{GuildMemberRow:S,getBotLabel:x,GuildStore:h}),function(){};const e=g.after("type",S,function(t,o){let[a]=t;const{guildId:n,channel:r,user:i}=a;console.log("Sidebar Row Props:",a);const l=f.findInReactTree(o,function(p){return p?.type?.Types});if(!l||!B.includes(x(l.props.type))){const p=h.getGuild(n),c=E(p,r,i);if(c)if(l)l.props={type:0,...c};else{const R=f.findInReactTree(o,function(te){return te?.props?.style?.flexDirection==="row"});if(!R){console.warn("Sidebar: Could not find row container.");return}R.props.children.splice(2,0,React.createElement(G.default,{type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified}))}}});return function(){return e()}}const Y=s.findByProps("getBotLabel");function q(){return g.after("default",Y,function(e,t){let[{text:o,textColor:a,backgroundColor:n}]=e;const r=f.findInReactTree(t,function(i){return typeof i.props.children=="string"});o&&(r.props.children=o),a&&r.props.style.push({color:a}),n&&t.props.style.push({backgroundColor:n})})}const{ScrollView:z}=v.General,{FormSection:J,FormSwitchRow:Q}=v.Forms;function Z(){return _.useProxy(y.storage),React.createElement(z,{style:{flex:1}},React.createElement(J,{title:"Tag style"},React.createElement(Q,{label:"Use top role color for tag backgrounds",value:y.storage.useRoleColor,onValueChange:function(e){y.storage.useRoleColor=e}})))}let C=[];var ee={onLoad:function(){y.storage.useRoleColor??=!1,C.push(O()),C.push(q()),C.push(j()),C.push(X()),C.push(U())},onUnload:function(){return C.forEach(function(e){return e()})},settings:Z};return b.default=ee,Object.defineProperty(b,"__esModule",{value:!0}),b})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
