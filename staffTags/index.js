(function(E,f,s,l,p,u,g,S,h){"use strict";const{Permissions:_}=l.constants,{computePermissions:T}=s.findByProps("computePermissions","canEveryoneRole"),x=s.findByStoreName("GuildMemberStore"),y=[l.i18n.Messages.AI_TAG,l.i18n.Messages.BOT_TAG_SERVER,l.i18n.Messages.SYSTEM_DM_TAG_SYSTEM,l.i18n.Messages.GUILD_AUTOMOD_USER_BADGE_TEXT,l.i18n.Messages.REMIXING_TAG],A=[{text:"WEBHOOK",condition:function(e,t,o){return o.isNonUserBot()}},{text:"OWNER",backgroundColor:u.rawColors.ORANGE_345,condition:function(e,t,o){return e?.ownerId===o.id}},{text:l.i18n.Messages.BOT_TAG_BOT,condition:function(e,t,o){return o.bot},verified:function(e,t,o){return o.isVerifiedBot()}},{text:"ADMIN",backgroundColor:u.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:u.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:u.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function B(e,t,o){let a;if(e){const r=T({user:o,context:e,overwrites:t?.permissionOverwrites});a=Object.entries(_).map(function(n){let[i,c]=n;return r&c?i:""}).filter(Boolean)}for(const r of A)if(r.condition?.(e,t,o)||r.permissions?.some(function(n){return a?.includes(n)})){let n=f.storage.useRoleColor?x.getMember(e?.id,o.id)?.colorString:void 0,i=n||(r.backgroundColor??u.rawColors.BRAND_500),c=n||!r.textColor?l.chroma(i).get("lab.l")<70?u.rawColors.WHITE_500:u.rawColors.BLACK_500:r.textColor;return{...r,textColor:c,backgroundColor:i,verified:typeof r.verified=="function"?r.verified(e,t,o):r.verified??!1,condition:void 0,permissions:void 0}}}const b=s.findByName("getTagProperties",!1),M=s.findByStoreName("GuildStore"),G=s.findByStoreName("ChannelStore");function I(){return p.after("default",b,function(e,t){let[{message:o}]=e;if(!y.includes(t.tagText)){const a=G.getChannel(o.channel_id),r=M.getGuild(a?.guild_id),n=B(r,a,o.author);if(n)return{...t,tagText:n.text,tagTextColor:n.textColor?l.ReactNative.processColor(l.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?l.ReactNative.processColor(l.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}})}const v=s.findByProps("getBotLabel"),O=v.getBotLabel,k=s.findByStoreName("GuildStore"),m=function(e,t){let[{guildId:o,user:a}]=e;console.log(t);const r=g.findInReactTree(t.props.label,function(n){return n.type.Types});if(!r||!y.includes(O(r.props.type))){const n=k.getGuild(o),i=B(n,void 0,a);if(i)if(r)r.props={type:0,...i};else{const c=g.findInReactTree(t.props.label,function(R){return R.props?.lineClamp}).props.children;c.props.children[1]=React.createElement(React.Fragment,null," ",React.createElement(v.default,{type:0,text:i.text,textColor:i.textColor,backgroundColor:i.backgroundColor,verified:i.verified}))}}};function w(){const e=[];return s.findByTypeNameAll("UserRow").forEach(function(t){return e.push(p.after("type",t,m))}),function(){return e.forEach(function(t){return t()})}}const L=s.findByName("DisplayName",!1),D=s.findByName("HeaderName",!1),N=s.findByProps("getBotLabel"),P=N.getBotLabel,U=s.findByStoreName("GuildStore"),$=s.findByStoreName("ChannelStore");function H(){const e=[];return e.push(p.after("default",D,function(t,o){let[{channelId:a}]=t;o.props.channelId=a})),e.push(p.after("default",L,function(t,o){let[{guildId:a,channelId:r,user:n}]=t;const i=g.findInReactTree(o,function(c){return c.type.Types});if(!i||!y.includes(P(i.props.type))){const c=U.getGuild(a),R=$.getChannel(r),d=B(c,R,n);d&&(i?i.props={type:0,...d}:g.findInReactTree(o,function(q){return q.props.style.flexDirection==="row"}).props.children.push(React.createElement(N.default,{style:{marginLeft:0},type:0,text:d.text,textColor:d.textColor,backgroundColor:d.backgroundColor,verified:d.verified})))}})),function(){return e.forEach(function(t){return t()})}}const K=s.findByProps("getBotLabel");function V(){return p.after("default",K,function(e,t){let[{text:o,textColor:a,backgroundColor:r}]=e;const n=g.findInReactTree(t,function(i){return typeof i.props.children=="string"});o&&(n.props.children=o),a&&n.props.style.push({color:a}),r&&t.props.style.push({backgroundColor:r})})}const{ScrollView:F}=h.General,{FormSection:W,FormSwitchRow:j}=h.Forms;function X(){return S.useProxy(f.storage),React.createElement(F,{style:{flex:1}},React.createElement(W,{title:"Tag style"},React.createElement(j,{label:"Use top role color for tag backgrounds",value:f.storage.useRoleColor,onValueChange:function(e){f.storage.useRoleColor=e}})))}let C=[];var Y={onLoad:function(){f.storage.useRoleColor??=!1,C.push(I()),C.push(V()),C.push(H()),C.push(w())},onUnload:function(){return C.forEach(function(e){return e()})},settings:X};return E.default=Y,Object.defineProperty(E,"__esModule",{value:!0}),E})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
