(function(x,C,s,l,g,f,p,M,v){"use strict";const{Permissions:I}=l.constants,{computePermissions:m}=s.findByProps("computePermissions","canEveryoneRole"),w=s.findByStoreName("GuildMemberStore"),R=[l.i18n.Messages.AI_TAG,l.i18n.Messages.BOT_TAG_SERVER,l.i18n.Messages.SYSTEM_DM_TAG_SYSTEM,l.i18n.Messages.GUILD_AUTOMOD_USER_BADGE_TEXT,l.i18n.Messages.REMIXING_TAG],k=[{text:"WEBHOOK",condition:function(e,t,r){return r.isNonUserBot()}},{text:"OWNER",backgroundColor:f.rawColors.ORANGE_345,condition:function(e,t,r){return e?.ownerId===r.id}},{text:l.i18n.Messages.BOT_TAG_BOT,condition:function(e,t,r){return r.bot},verified:function(e,t,r){return r.isVerifiedBot()}},{text:"ADMIN",backgroundColor:f.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:f.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:f.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function b(e,t,r){let a;if(e){const o=m({user:r,context:e,overwrites:t?.permissionOverwrites});a=Object.entries(I).map(function(n){let[i,c]=n;return o&c?i:""}).filter(Boolean)}for(const o of k)if(o.condition?.(e,t,r)||o.permissions?.some(function(n){return a?.includes(n)})){let n=C.storage.useRoleColor?w.getMember(e?.id,r.id)?.colorString:void 0,i=n||(o.backgroundColor??f.rawColors.BRAND_500),c=n||!o.textColor?l.chroma(i).get("lab.l")<70?f.rawColors.WHITE_500:f.rawColors.BLACK_500:o.textColor;return{...o,textColor:c,backgroundColor:i,verified:typeof o.verified=="function"?o.verified(e,t,r):o.verified??!1,condition:void 0,permissions:void 0}}}const O=s.findByName("getTagProperties",!1),L=s.findByStoreName("GuildStore"),D=s.findByStoreName("ChannelStore");function $(){return g.after("default",O,function(e,t){let[{message:r}]=e;if(!R.includes(t.tagText)){const a=D.getChannel(r.channel_id),o=L.getGuild(a?.guild_id),n=b(o,a,r.author);if(n)return{...t,tagText:n.text,tagTextColor:n.textColor?l.ReactNative.processColor(l.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?l.ReactNative.processColor(l.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}})}const N=s.findByProps("getBotLabel"),P=N.getBotLabel,U=s.findByStoreName("GuildStore"),H=function(e,t){let[{guildId:r,user:a}]=e;console.log(t);const o=p.findInReactTree(t.props.label,function(n){return n.type.Types});if(!o||!R.includes(P(o.props.type))){const n=U.getGuild(r),i=b(n,void 0,a);if(i)if(o)o.props={type:0,...i};else{const c=p.findInReactTree(t.props.label,function(d){return d.props?.lineClamp}).props.children;c.props.children[1]=React.createElement(React.Fragment,null," ",React.createElement(N.default,{type:0,text:i.text,textColor:i.textColor,backgroundColor:i.backgroundColor,verified:i.verified}))}}};function K(){const e=[];return s.findByTypeNameAll("UserRow").forEach(function(t){return e.push(g.after("type",t,H))}),function(){return e.forEach(function(t){return t()})}}const V=s.findByName("DisplayName",!1),F=s.findByName("HeaderName",!1),S=s.findByProps("getBotLabel"),W=S.getBotLabel,j=s.findByStoreName("GuildStore"),X=s.findByStoreName("ChannelStore");function Y(){const e=[];return e.push(g.after("default",F,function(t,r){let[{channelId:a}]=t;r.props.channelId=a})),e.push(g.after("default",V,function(t,r){let[{guildId:a,channelId:o,user:n}]=t;const i=p.findInReactTree(r,function(c){return c.type.Types});if(!i||!R.includes(W(i.props.type))){const c=j.getGuild(a),d=X.getChannel(o),u=b(c,d,n);u&&(i?i.props={type:0,...u}:p.findInReactTree(r,function(E){return E.props.style.flexDirection==="row"}).props.children.push(React.createElement(S.default,{style:{marginLeft:0},type:0,text:u.text,textColor:u.textColor,backgroundColor:u.backgroundColor,verified:u.verified})))}})),function(){return e.forEach(function(t){return t()})}}const T=s.findByName("GuildMemberRow",!1),A=s.findByProps("getBotLabel"),_=A?.getBotLabel,G=s.findByStoreName("GuildStore");function q(){if(!T||!_||!G)return console.error("sidebar.tsx: Missing modules"),function(){};const e=g.after("type",T,function(t,r){let[{guildId:a,channel:o,user:n}]=t;if(!r?.props)return;const i=p.findInReactTree(r,function(h){return h?.type?.Types});if(i&&R.includes(_(i.props?.type)))return;const c=G.getGuild(a),d=b(c,o,n);if(!d)return;if(i){i.props={type:0,...d};return}const u=p.findInReactTree(r,function(h){return h?.props?.style?.flexDirection==="row"});if(!u?.props){console.warn("sidebar.tsx: Row not found or props missing");return}const E=React.createElement(A.default,{type:0,text:d.text,textColor:d.textColor,backgroundColor:d.backgroundColor,verified:d.verified}),B=u.props.children;Array.isArray(B)?B.splice(2,0,E):typeof B=="function"?console.warn("sidebar.tsx: children is a function \u2014 skipping tag injection"):B!=null?u.props.children=[B,E]:u.props.children=[E]});return function(){return e()}}const z=s.findByProps("getBotLabel");function J(){return g.after("default",z,function(e,t){let[{text:r,textColor:a,backgroundColor:o}]=e;const n=p.findInReactTree(t,function(i){return typeof i.props.children=="string"});r&&(n.props.children=r),a&&n.props.style.push({color:a}),o&&t.props.style.push({backgroundColor:o})})}const{ScrollView:Q}=v.General,{FormSection:Z,FormSwitchRow:ee}=v.Forms;function te(){return M.useProxy(C.storage),React.createElement(Q,{style:{flex:1}},React.createElement(Z,{title:"Tag style"},React.createElement(ee,{label:"Use top role color for tag backgrounds",value:C.storage.useRoleColor,onValueChange:function(e){C.storage.useRoleColor=e}})))}let y=[];var re={onLoad:function(){C.storage.useRoleColor??=!1,y.push($()),y.push(J()),y.push(Y()),y.push(q()),y.push(K())},onUnload:function(){return y.forEach(function(e){return e()})},settings:te};return x.default=re,Object.defineProperty(x,"__esModule",{value:!0}),x})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
